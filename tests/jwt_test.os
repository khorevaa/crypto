#использовать "../src"
#Использовать asserts
#Использовать logos

Перем юТест;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;

	ИменаТестов = Новый Массив;

	ИменаТестов.Добавить("ТестДолжен_ПроверитьРаботуКласса");


	Возврат ИменаТестов;

КонецФункции

Процедура ТестДолжен_ПроверитьРаботуКласса() Экспорт

	ЭталонТокена = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c";

	jwt = новый jwt;
	КлючШифрования = "your-256-bit-secret";
	ДанныеКлюча = Новый Структура;
	ДанныеКлюча.Вставить("sub", "1234567890");
	ДанныеКлюча.Вставить("name", "John Doe");
	ДанныеКлюча.Вставить("iat", 1516239022);
	
	Токен = jwt.Кодировать(КлючШифрования, ДанныеКлюча);
	
	Ожидаем.Что(Токен, "Токен и эталонный токен должны совпадать").Равно(ЭталонТокена);

	РасшифрованныеДанные = jwt.Декодировать(Токен, КлючШифрования);

	Ожидаем.Что(РасшифрованныеДанные.sub, "Расшифрованные данные sub должны совпадать").Равно(ДанныеКлюча.sub);
	Ожидаем.Что(РасшифрованныеДанные.name, "Расшифрованные данные name должны совпадать").Равно(ДанныеКлюча.name);
	Ожидаем.Что(РасшифрованныеДанные.iat, "Расшифрованные данные sub должны совпадать").Равно(ДанныеКлюча.iat);

КонецПроцедуры




